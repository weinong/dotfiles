#!/usr/bin/env bash
set -euo pipefail

# --- Ensure Homebrew in PATH for this script ---
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
elif [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
else
  echo "[chezmoi] Homebrew not found. Please install Homebrew first."; exit 1
fi

echo "[chezmoi] Installing Brewfile packages..."
: "${HOMEBREW_NO_AUTO_UPDATE:=}"
if [[ -z "${HOMEBREW_NO_AUTO_UPDATE}" ]]; then
  brew update || true
fi
# --no-lock avoids creating Brewfile.lock.json in $HOME
brew bundle --file="$HOME/Brewfile" || true

# --- REQUIRE zsh (error out if missing) ---
if ! command -v zsh >/dev/null 2>&1; then
  echo "[chezmoi] ERROR: zsh is required but not installed." >&2
  echo "[chezmoi] Add 'brew \"zsh\"' to your Brewfile or install via your OS package manager, then re-run 'chezmoi apply'." >&2
  exit 1
fi

# --- REQUIRE zsh (error out if missing) ---
if ! command -v zsh >/dev/null 2>&1; then
  echo "[chezmoi] ERROR: zsh is required but not installed." >&2
  echo "[chezmoi] Add 'brew \"zsh\"' to your Brewfile or install via your OS package manager, then re-run 'chezmoi apply'." >&2
  exit 1
fi

ZSH_PATH="$(command -v zsh)"
if [[ "${SHELL:-}" != "$ZSH_PATH" ]] && grep -qxF "$ZSH_PATH" /etc/shells 2>/dev/null; then
  chsh -s "$ZSH_PATH" || true
fi

if command -v mise >/dev/null 2>&1; then
  echo "[chezmoi] Installing tools via mise..."
  mise install || true
else
  echo "[chezmoi] mise not found; skip tool install."
fi

echo "[chezmoi] Bootstrap finished."

