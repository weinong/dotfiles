if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
elif [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
else
  echo "[chezmoi] Homebrew not found. Please install Homebrew first."; exit 1
fi

# Basic PATH
export PATH="$HOME/.local/bin:$PATH"

# ----- mise (tool/version manager) -----
if command -v mise >/dev/null 2>&1; then
  eval "$(mise activate zsh)"
fi

# =========================
# Completion (must precede fzf-tab)
# =========================
autoload -Uz compinit
# Use a cached compdump for speed; build if missing
ZCOMPDUMP_PATH="${ZDOTDIR:-$HOME}/.zcompdump"
if [[ -r "$ZCOMPDUMP_PATH" ]]; then
  compinit -d "$ZCOMPDUMP_PATH"
else
  compinit -C -d "$ZCOMPDUMP_PATH"
fi

# =========================
# Plugins via zgenom
# =========================
# Install/Update zgenom with a chezmoi run_once_* script (see guide).
# Load zgenom and compile plugin init on first run for fast startups.
if [ -r "$HOME/.zgenom/zgenom.zsh" ]; then
  source "$HOME/.zgenom/zgenom.zsh"

  if ! zgenom saved; then
    echo "[zgenom] Building plugin cache..."

    # External plugins you used before
    zgenom load Aloxaf/fzf-tab
    zgenom load wfxr/forgit
    zgenom load jeffreytse/zsh-vi-mode
    zgenom load zsh-users/zsh-autosuggestions
    zgenom load zsh-users/zsh-syntax-highlighting

    zgenom save
  fi
else
  echo "[zshrc] zgenom not found. Run 'chezmoi apply' to install it." >&2
fi

if command -v brew >/dev/null 2>&1; then
  FZF_BASE="$(brew --prefix)/opt/fzf"
fi

# Faster file/directory listing
if command -v fd >/dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
elif command -v rg >/dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --no-ignore-vcs'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='rg --files --hidden --follow --no-ignore-vcs --null | xargs -0 -n1 dirname | sort -u'
fi

# UI tweaks
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
  --height=40% --layout=reverse
  --border --margin=1
  --ansi --tabstop=2
  --info=inline
  --preview-window=right,60%,border
  --marker="â€¢"'

# Load fzf completion + keybindings
if [ -n "$FZF_BASE" ]; then
  [[ -r "$FZF_BASE/shell/completion.zsh" ]] && source "$FZF_BASE/shell/completion.zsh"
  [[ -r "$FZF_BASE/shell/key-bindings.zsh" ]] && source "$FZF_BASE/shell/key-bindings.zsh"
else
  eval "$(fzf --zsh 2>/dev/null)" || true
fi

# Bindings for emacs & vi modes
bindkey -M emacs '^R' fzf-history-widget
bindkey -M viins '^R' fzf-history-widget
bindkey -M vicmd '^R' fzf-history-widget

bindkey -M emacs '^T' fzf-file-widget
bindkey -M viins '^T' fzf-file-widget
bindkey -M vicmd '^T' fzf-file-widget

bindkey -M emacs '^[c' fzf-cd-widget    # Alt-c
bindkey -M viins '^[c' fzf-cd-widget
bindkey -M vicmd '^[c' fzf-cd-widget

# Ctrl-F: pick a file then open in $EDITOR
_fzf_open_in_editor() {
  local pick
  pick="$({ ${FZF_CTRL_T_COMMAND:-$FZF_DEFAULT_COMMAND} || find . -type f; } 2>/dev/null \
    | fzf --preview="$FZF_PREVIEW_CMD")" || return
  "${EDITOR:-nvim}" -- "$pick"
}
zle     -N   fzf-open-in-editor _fzf_open_in_editor
bindkey -M emacs '^F' fzf-open-in-editor
bindkey -M viins '^F' fzf-open-in-editor
bindkey -M vicmd '^F' fzf-open-in-editor


### ======================
### fzf live grep (Ctrl-G)
### ======================

_fzf_live_grep() {
  if ! command -v rg >/dev/null 2>&1; then
    echo "fzf-live-grep requires ripgrep (rg). Install it (e.g., brew install ripgrep)." >&2
    return 1
  fi

  local RG_BASE=('rg' '--line-number' '--no-heading' '--color=always' '--hidden' '--glob' '!.git')
  local PREVIEW
  if command -v bat >/dev/null 2>&1; then
    PREVIEW='bat --style=plain --color=always --line-range=:500 --highlight-line {2} {1} 2>/dev/null || sed -n "1,200p" -- {1} 2>/dev/null'
  else
    PREVIEW='sed -n "1,200p" -- {1} 2>/dev/null'
  fi

  local selection
  selection="$(
    FZF_DEFAULT_COMMAND="${RG_BASE[*]} -- ''" \
    fzf --ansi --disabled --phony --query '' \
        --prompt='RG> ' \
        --height=40% --layout=reverse --border --margin=1 \
        --info=inline --preview "$PREVIEW" --preview-window=right,60%,border \
        --delimiter=':' \
        --bind "change:reload:${RG_BASE[*]} -- {q} || true" \
        --bind "enter:accept"
  )" || return

  local file line
  file="${selection%%:*}"
  line="${selection#*:}"; line="${line%%:*}"
  [[ -n "$file" ]] || return
  if [[ -n "$line" ]]; then
    "${EDITOR:-nvim}" +${line} -- "$file"
  else
    "${EDITOR:-nvim}" -- "$file"
  fi
}

zle -N fzf-live-grep _fzf_live_grep
bindkey -M emacs '^G' fzf-live-grep
bindkey -M viins '^G' fzf-live-grep
bindkey -M vicmd '^G' fzf-live-grep

if command -v zoxide >/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
fi

if command -v nvim >/dev/null 2>&1; then
  alias vim='nvim'
  alias vi='nvim'
fi

if command -v lazygit >/dev/null 2>&1; then
  alias lg='lazygit'
fi

if command -v eza >/dev/null 2>&1; then
  alias l='eza'
  alias la='eza -a'
  alias ll='eza -lah'
  alias ls='eza --color=auto'
else
  alias ll='ls -lah'
fi

if command -v bat >/dev/null 2>&1; then
  alias cat='bat -P --style=plain'
  export FZF_PREVIEW_CMD='bat --style=plain --color=always --line-range=:500 {} 2>/dev/null || head -n 500 {}'
fi

setopt autocd extendedglob interactivecomments
setopt histignorealldups sharehistory incappendhistory
HISTFILE="$HOME/.zsh_history"
HISTSIZE=200000
SAVEHIST=200000

export GPG_TTY=$(tty)
